# name: Django CI

# on:
#   push:
#     branches: [ main, dev ]
#   pull_request:
#     branches: [ main, dev ]

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres:13
#         env:
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: test_db
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python 3.12
#         uses: actions/setup-python@v5
#         with:
#           python-version: 3.12

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run tests with test database
#         env:
#           SECRET_KEY: test-secret-key-for-ci-only
#           DB_PASSWORD: postgres  # Seule variable obligatoire
#           DEBUG: True
#         run: |
#           python manage.py test

name: Django CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect static files
        env:
          CI: "true"
          SECRET_KEY: test-secret-key-for-ci-only
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/test_db
          SECRET_KEY_STRIPE: sk_test_fake
          PUBLISHABLE_KEY_STRIPE: pk_test_fake
          STRIPE_PRICE_ID: price_test_fake
          EMAIL_PORT: 587
          EMAIL_HOST_USER: test@example.com
          EMAIL_HOST_PASSWORD: test_password
          DEFAULT_FROM_EMAIL: test@example.com
          DOMAIN: localhost
        run: |
          python manage.py collectstatic --noinput

      - name: Run Django tests
        env:
          CI: "true"
          SECRET_KEY: test-secret-key-for-ci-only
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/test_db
          SECRET_KEY_STRIPE: sk_test_fake
          PUBLISHABLE_KEY_STRIPE: pk_test_fake
          STRIPE_PRICE_ID: price_test_fake
          EMAIL_PORT: 587
          EMAIL_HOST_USER: test@example.com
          EMAIL_HOST_PASSWORD: test_password
          DEFAULT_FROM_EMAIL: test@example.com
          DOMAIN: localhost
        run: |
          python manage.py migrate
          python manage.py test